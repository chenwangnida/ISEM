<?xml version="1.0" encoding="UTF-8"?>
<filter:FilterConfiguration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dl="http://www.dfki.de/s2m2/2011/s2m2/inference/dl" xmlns:filter="http://www.dfki.de/s2m2/2011/s2m2" xmlns:lucene="http://www.dfki.de/s2m2/2011/s2m2/textsim/lucene" xmlns:pellet="http://www.dfki.de/s2m2/2011/s2m2/inference/dl/pellet" xmlns:textsim="http://www.dfki.de/s2m2/2011/s2m2/textsim">
  <resource xsi:type="pellet:PelletReasoner" name="Pellet" preprocessing="true"/>
  <resource xsi:type="lucene:LuceneMemoryIndex"/>
  <filter xsi:type="filter:BooleanAsDouble" name="exact">
    <operand xsi:type="filter:And">
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for inputs">
        <operand xsi:type="filter:Inverse">
          <operand xsi:type="filter:ForallExists">
            <operand xsi:type="dl:Equivalence" engine="//@resource.0"/>
          </operand>
        </operand>
      </operands>
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for outputs" type="Output">
        <operand xsi:type="filter:ForallExists">
          <operand xsi:type="dl:Equivalence" name="" engine="//@resource.0"/>
        </operand>
      </operands>
      <operands xsi:type="filter:GreaterEquals">
        <leftOperand xsi:type="filter:Average">
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedInput</types>
          </operands>
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedOutput</types>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="filter:FixedValue" name="threshold" alpha="0.5"/>
      </operands>
    </operand>
  </filter>
  <filter xsi:type="filter:BooleanAsDouble" name="plug-in">
    <operand xsi:type="filter:And">
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for inputs">
        <operand xsi:type="filter:Inverse">
          <operand xsi:type="filter:ForallExists">
            <operand xsi:type="dl:Subsumption" engine="//@resource.0"/>
          </operand>
        </operand>
      </operands>
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for outputs" type="Output">
        <operand xsi:type="filter:ForallExists">
          <operand xsi:type="filter:Inverse">
            <operand xsi:type="dl:LeastGenericConcept" engine="//@resource.0"/>
          </operand>
        </operand>
      </operands>
      <operands xsi:type="filter:GreaterEquals">
        <leftOperand xsi:type="filter:Average">
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedInput</types>
          </operands>
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedOutput</types>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="filter:FixedValue" name="threshold" alpha="0.5"/>
      </operands>
    </operand>
  </filter>
  <filter xsi:type="filter:BooleanAsDouble" name="subsumes">
    <operand xsi:type="filter:And">
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for inputs">
        <operand xsi:type="filter:Inverse">
          <operand xsi:type="filter:ForallExists">
            <operand xsi:type="dl:Subsumption" engine="//@resource.0"/>
          </operand>
        </operand>
      </operands>
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for outputs" type="Output">
        <operand xsi:type="filter:ForallExists">
          <operand xsi:type="dl:Subsumption" engine="//@resource.0"/>
        </operand>
      </operands>
      <operands xsi:type="filter:GreaterEquals">
        <leftOperand xsi:type="filter:Average">
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedInput</types>
          </operands>
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedOutput</types>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="filter:FixedValue" name="threshold" alpha="0.5"/>
      </operands>
    </operand>
  </filter>
  <filter xsi:type="filter:BooleanAsDouble" name="subsumed-by">
    <operand xsi:type="filter:And">
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for inputs">
        <operand xsi:type="filter:Inverse">
          <operand xsi:type="filter:ForallExists">
            <operand xsi:type="dl:Subsumption" engine="//@resource.0"/>
          </operand>
        </operand>
      </operands>
      <operands xsi:type="filter:SemanticAnnotationEvaluation" name="for outputs" type="Output">
        <operand xsi:type="filter:ForallExists">
          <operand xsi:type="dl:LeastGenericConcept" engine="//@resource.0"/>
        </operand>
      </operands>
      <operands xsi:type="filter:GreaterEquals">
        <leftOperand xsi:type="filter:Average">
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedInput</types>
          </operands>
          <operands xsi:type="filter:ServiceLiteralEvaluation">
            <operand xsi:type="filter:Concatenation">
              <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
            </operand>
            <types>UnfoldedOutput</types>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="filter:FixedValue" name="threshold" alpha="0.5"/>
      </operands>
    </operand>
  </filter>
  <filter xsi:type="filter:BooleanAsDouble" name="nearest-neighbor">
    <operand xsi:type="filter:GreaterEquals">
      <leftOperand xsi:type="filter:Average">
        <operands xsi:type="filter:ServiceLiteralEvaluation">
          <operand xsi:type="filter:Concatenation">
            <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
          </operand>
          <types>UnfoldedInput</types>
        </operands>
        <operands xsi:type="filter:ServiceLiteralEvaluation">
          <operand xsi:type="filter:Concatenation">
            <operand xsi:type="textsim:Cosine" index="//@resource.1"/>
          </operand>
          <types>UnfoldedOutput</types>
        </operands>
      </leftOperand>
      <rightOperand xsi:type="filter:FixedValue" name="threshold" alpha="0.5"/>
    </operand>
  </filter>
  <filter xsi:type="filter:FixedValue" name="fail" alpha="1.0"/>
</filter:FilterConfiguration>
